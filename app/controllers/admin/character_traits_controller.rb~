module Admin
  class CharacterTraitsController < AdminController
    before_action :load_and_authorize_character_trait,
      only: [:show, :edit, :update, :destroy]
    before_action :set_breadcrumbs

    def index
      authorize CharacterTrait
      @character_traits = CharacterTrait.page(params[:page]).per(1)
      @character_traits = PaginatingDecorator.decorate(@character_traits, with: CharacterTraitDecorator)
    end

    def new
      @character_trait = CharacterTrait.new
      authorize @character_trait
      add_breadcrumb t(".title")
    end

    def edit
      add_breadcrumb @character_trait.name
      add_breadcrumb t(".title")
    end

    def create
      @character_trait = CharacterTrait.new(character_trait_params)
      authorize @character_trait

      if @character_trait.save
        redirect_to admin_character_trait_path(@character_trait), notice: t(".notice")
      else
        render :new
      end
    end

    def update
      if @character_trait.update(character_trait_params)
        redirect_to admin_character_trait_path(@character_trait), notice: t(".notice")
      else
        render :edit
      end
    end

    def destroy
      @character_trait.destroy
      redirect_to admin_character_traits_url, notice: t(".notice")
    end

    private

    def load_and_authorize_character_trait
      @character_trait = CharacterTrait.find(params[:id])
      authorize @character_trait
    end

    def character_trait_params
      params.require(:character_trait).permit(*policy(@character_trait || CharacterTrait).permitted_attributes)
    end
    
    def set_breadcrumbs
      add_breadcrumb t("admin.title"), admin_path
      add_breadcrumb t("menu.character_traits"), admin_character_traits_path
    end
    
  end
end
