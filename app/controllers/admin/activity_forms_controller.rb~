module Admin
  class ActivityFormsController < AdminController
    before_action :load_and_authorize_activity_form,
      only: [:show, :edit, :update, :destroy]
    before_action :set_breadcrumbs

    def index
      authorize ActivityForm
      @activity_forms = ActivityForm.page(params[:page]).per(20)
      @activity_forms = PaginatingDecorator.decorate(@activity_forms, with: ActivityFormDecorator)
    end

    def show
      @activity_form = ActivityFormDecorator.decorate(@activity_form)
      add_breadcrumb @activity_form.name
    end

    def new
      @activity_form = ActivityForm.new
      authorize @activity_form
      add_breadcrumb t(".title")
    end

    def edit
      add_breadcrumb @activity_form.name
      add_breadcrumb t(".title")
    end

    def create
      @activity_form = ActivityForm.new(activity_form_params)
      authorize @activity_form

      if @activity_form.save
        redirect_to admin_activity_form_path(@activity_form), notice: t(".notice")
      else
        render :new
      end
    end

    def update
      if @activity_form.update(activity_form_params)
        redirect_to admin_activity_form_path(@activity_form), notice: t(".notice")
      else
        render :edit
      end
    end

    def destroy
      @activity_form.destroy
      redirect_to admin_activity_forms_url, notice: t(".notice")
    end

    private
    
    def load_and_authorize_activity_form
      @activity_form = ActivityForm.find(params[:id])
      authorize @activity_form
    end

    def activity_form_params
      params.require(:activity_form).permit(*policy(@activity_form || ActivityForm).permitted_attributes)
    end
    
    def set_breadcrumbs
      add_breadcrumb t("admin.title"), admin_path
      add_breadcrumb t("menu.activity_forms"), admin_activity_forms_path
    end
    
  end
end
